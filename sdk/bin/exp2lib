#!/usr/bin/env perl
use strict;
use warnings;

my $argc = $#ARGV + 1;

if ($argc != 3)
{
	print "Usage:\n";
	print "\texp2lib [expfile] [libfile] [tmpfolder]\n";
	exit();
}

my $expfile = $ARGV[0];
my $libfile = $ARGV[1];
my $tmpfolder = $ARGV[2];

my $curMod = "";
my $compile = $libfile ne ":no:";
my @sfiles = ();
my @ofiles = ();
my $cc = $ENV{'CC'};
my $ar = $ENV{'AR'};
$compile && !$cc and die "The CC env var must be defined!";
$compile && !$ar and die "The AR env var must be defined!";

open INFO, $expfile or die "Could not open $expfile: $!";
while (<INFO>)
{
	if (/^\s*([a-zA-Z0-9_]+)\s+module/i)
	{
		$curMod = $1;
	} elsif (/^\s*([a-zA-Z0-9_]+)(\s+obj)?/i)
	{
		my $isObj = $2 ? 1 : 0;
		my $sym = $1;
		my $outfname = "$tmpfolder/$sym.imp.s";
		push(@sfiles, $outfname);
		open OUTF, '>', $outfname or die "Could not open file '$outfname' for write: $!";
		print OUTF ".section .imp.$curMod, \"ax\", %progbits\n";
		print OUTF ".global __imp_$sym\n.hidden __imp_$sym\n.align 2\n";
		if ($isObj)
		{
			print OUTF ".global $sym\n.hidden $sym\n$sym:\n";
		} else
		{
			print OUTF ".global $sym\n.hidden $sym\n.type $sym, %function\n$sym:\n\tldr pc, [pc, #-4]\n";
		}
		print OUTF "__imp_$sym:\n\t.word 0\n";
		close OUTF;

		my $ofile = "$tmpfolder/$sym.imp.o";
		push(@ofiles, $ofile);
		system("$cc -x assembler-with-cpp -g0 -c $outfname -o $ofile") >> 8 and die "Failed to run $cc!";
	} elsif (/^\s*;/)
	{
		next;
	}
}
close INFO;

if ($compile)
{
	my $olist = join(" ", @ofiles);
	my $slist = join(" ", @sfiles);
	my $rc = system("$ar -rc $libfile $olist") >> 8;
	system("rm $olist $slist");
	$rc != 0 and die "Failed to run $ar!";
}
